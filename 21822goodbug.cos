**
** Good bug script
**
** Sprites by ChameleonSushi, coding by Pilla.
**
**
** Feel free to use this code however you want.
**
**

**
** Caos2pray chunk
**
** Compiles the agent.
**
* CAOS2PRAY CHUNK
*# Pray-File "gp_good_bug_CS.agents"
*# DS-Name "Crafty's Good Bug (ChameleonSushi)"
*# attach gp_good_bug_CS.c16 
*# depend blnk.c16
*# desc = "A bug. Bug good."
*# Agent Animation File = "gp_good_bug_CS.c16"
*# Agent Sprite First Image = 20
*# Agent Animation Gallery = "gp_good_bug_CS"
*
*

*
** Injection script
**

**
** The bug vendor
**

new: simp 2 23 21822 "gp_good_bug_CS" 1 0 rand 800 900
tino 128 128 128 90 0
** Attributes: mouseable 2 + activateable 4 + collide 64 + physics 128 = 198
attr 198
perm 100
accg 1
aero 1
fric 80
elas 20
bhvr 0
mvsf game "CreatorX" game "CreatorY"


**
** SCRIPTS
**
**
**

**
** GOOD BUG VENDOR
**

*
** PUSH SCRIPT

scrp 2 23 21822 1
	lock

	setv va05 posl
	setv va06 post

	inst
	new: simp 2 13 21822 "gp_good_bug_CS" 12 0 rand 2000 3000
** attr: mouseable 2 + collide 64 + physics 128 = 194, bhvr eat 16 + pickup 32 = 48
	attr 194
	bhvr 48
** won't go through walls
	perm 100
** Physics
	accg 1
	aero 1
	fric 50
	elas 1
	rnge 20
	frat 2
** Set life variable
	setv ov00 rand 4000 6000
** set direction
	setv ov10 rand -1 1
** set tick
	tick 10
** move
	mvto va05 va06
	slow
	unlk

endm


** GOOD BUG
* 

** good bug eaten script
scrp 2 13 21822 12
	lock
	wait 10
** stim "eaten animal"
	stim writ from 80 1
	wait 10
	kill ownr
	unlk
endm

** good bug timer script
scrp 2 13 21822 9

*This is where any subroutines you want to happen go. 
*For now, this is just the movement subroutine! 
	tick 0
	gsub walk
	tick rand 1 10

*The walking subroutine! Yay. 
	subr walk

*Set the amount of 'walks' to a random number between 3 and 9 
*The more walks you want, the higher the last number 
		setv ov40 rand 5 15

		wait rand 1 10

*If there is a wall to the right, set ov10 to -1
		doif obst rght lt 5
			setv ov10 -1

*If there is a wall to the left, set ov10 to 1 
		elif obst left lt 5
			setv ov10 1

*Otherwise, set the direction randomly right or left 
		else
			setv ov10 rand -1 1
		endi

*If the critter is not being carried and is not falling 
		doif carr eq null and fall = 0

*Checks if the critter is going right 
*If so, go to the 'right' subroutine 
			doif ov10 = 1
				gsub right
			endi

*Checks if the critter is going left 
*If so, go to the 'left' subroutine 
			doif ov10 = -1
				gsub left
			endi

*Otherwise, stop. 
		else
			stop
		endi
	retn


*The going right subroutine 
	subr right

*Repeat for ov40 times (randomly between 1 & 6) 
		reps ov40
			targ ownr
			anim [0 1 2]
			velo 2 -1
			over
			anim [3 4 5]
			velo 2 -1
			over
		repe
	retn

*The going left subroutine 
	subr left

*Repeat for ov40 times (randomly between 1 & 6) 
		reps ov40
			targ ownr
			anim [6 7 8]
			velo -2 -1
			over
			anim [9 10 11]
			velo -2 -1
			over
		repe
	retn
endm



*
** Removal script 
*

rscr

enum 2 23 21822
	kill targ
next
enum 2 13 21822
	kill targ
next

scrx 2 23 21822 9
scrx 2 23 21822 1
scrx 2 11 21822 9
scrx 2 11 21822 12